/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler),
    graphClickedCallback(this, &Screen2ViewBase::graphClickedCallbackHandler),
    graphDraggedCallback(this, &Screen2ViewBase::graphDraggedCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_BACKGROUNDS_480X272_METEOR_RAIN_ID));
    add(image1);

    sineGraph.setPosition(0, 0, 426, 271);
    sineGraph.setScale(1);
    sineGraph.setGraphRangeX(0, 10);
    sineGraph.setGraphAreaMargin(6, 59, -4, 32);
    sineGraph.setGraphAreaPadding(8, 1, 10, 0);
    sineGraph.setGraphRangeY(-100, 100);
    sineGraph.setClickAction(graphClickedCallback);
    sineGraph.setDragAction(graphDraggedCallback);
    sineGraphMajorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    sineGraphMajorXAxisGrid.setInterval(1);
    sineGraphMajorXAxisGrid.setLineWidth(1);
    sineGraphMajorXAxisGrid.setScale(1);
    sineGraph.addGraphElement(sineGraphMajorXAxisGrid);

    sineGraphMajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    sineGraphMajorYAxisGrid.setInterval(20);
    sineGraphMajorYAxisGrid.setLineWidth(1);
    sineGraphMajorYAxisGrid.setScale(1);
    sineGraph.addGraphElement(sineGraphMajorYAxisGrid);

    sineGraphMinorYAxisLabel.setInterval(20);
    sineGraphMinorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_FZQY));
    sineGraphMinorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    sineGraphMinorYAxisLabel.setScale(1);
    sineGraphMinorYAxisLabel.setMajorLabel(sineGraphMajorYAxisLabel);
    sineGraph.addLeftElement(sineGraphMinorYAxisLabel);

    sineGraphMajorXAxisLabel.setInterval(1);
    sineGraphMajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_670F));
    sineGraphMajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    sineGraphMajorXAxisLabel.setScale(1);
    sineGraph.addBottomElement(sineGraphMajorXAxisLabel);

    sineGraphMajorYAxisLabel.setInterval(20);
    sineGraphMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_HVI7));
    sineGraphMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    sineGraphMajorYAxisLabel.setScale(1);
    sineGraph.addLeftElement(sineGraphMajorYAxisLabel);

    sineGraphLine1Painter.setColor(touchgfx::Color::getColorFromRGB(196, 59, 22));
    sineGraphLine1.setPainter(sineGraphLine1Painter);
    sineGraphLine1.setLineWidth(2);
    sineGraph.addGraphElement(sineGraphLine1);


    sineGraph.addDataPoint(45.76718f);
    sineGraph.addDataPoint(-67.47697f);
    sineGraph.addDataPoint(-17.47422f);
    sineGraph.addDataPoint(96.55419f);
    sineGraph.addDataPoint(-43.09696f);
    sineGraph.addDataPoint(-70.34679f);
    sineGraph.addDataPoint(80.01057f);
    sineGraph.addDataPoint(12.73386f);
    sineGraph.addDataPoint(-61.98898f);
    sineGraph.addDataPoint(20.19053f);
    sineGraph.addDataPoint(15.80567f);
    sineGraph.addDataPoint(-0.34428f);
    add(sineGraph);

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 128, 0), touchgfx::Color::getColorFromRGB(204, 160, 0), touchgfx::Color::getColorFromRGB(102, 92, 0), touchgfx::Color::getColorFromRGB(153, 126, 52));
    flexButton1.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_WEST_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_WEST_50_50_E8F6FB_SVG_ID));
    flexButton1.setIconXY(0, 0);
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(430, 222, 50, 50);
    add(flexButton1);

    infowidget1.setXY(0, -15);
    add(infowidget1);
}

Screen2ViewBase::~Screen2ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen2ViewBase::setupScreen()
{
    infowidget1.initialize();
}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards West
        application().gotoScreen1ScreenSlideTransitionWest();
    }
}

void Screen2ViewBase::graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value)
{
    if (&src == &sineGraph)
    {
        //Interaction2
        //When sineGraph clicked call virtual function
        //Call graph1Clicked
        graph1Clicked(value);
    }
}

void Screen2ViewBase::graphDraggedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphDragEvent& value)
{
    if (&src == &sineGraph)
    {
        //Interaction3
        //When sineGraph dragged call virtual function
        //Call graph1Dragged
        graph1Dragged(value);
    }
}
